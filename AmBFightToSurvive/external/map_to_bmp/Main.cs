using System;
using System.Drawing;
using System.IO;

// This program converts the files generated by the console
// command rendermap into a bitmap file
// Just drag the first file onto the program.
// ITS THAT EASY!

static class Program
{
	private static StreamReader OpenFile(string RFile, int Num)
	{
		return new StreamReader(File.OpenRead(RFile + Num.ToString() + ".txt"));
	}
	
	public static void Main (string[] args)
	{
		if(args.Length > 0)
		{
			string file = args[0];
			Console.WriteLine("Input file: " + file);
			Console.WriteLine("Press any key to continue");
			Console.ReadKey();
			
			string rfile = file.Replace("1.txt", "");
			int curnum = 1;
			
			// Open file and read data
			StreamReader instream = OpenFile(rfile, curnum);
			int width = Convert.ToInt32(instream.ReadLine());
			int height = Convert.ToInt32(instream.ReadLine());
			double[,] gres = new double[width, height];
			double[,] wres = new double[width, height];
			double gresmax = double.NegativeInfinity;
			double gresmin = double.PositiveInfinity;
			double wlvmax = double.NegativeInfinity;
			for(int y = 0; y < height; y++) 
			{
				for(int x = 0; x < width; x++)
				{
					while(true)
					{
						try
						{
							gres[x, y] = Convert.ToDouble(instream.ReadLine());
							wres[x, y] = Convert.ToDouble(instream.ReadLine());
							break;
						}
						catch(Exception)
						{
							curnum++;
							instream = OpenFile(rfile, curnum);
							Console.WriteLine("Open File: " + curnum.ToString());
						}
					}
					double wlv = Math.Max(wres[x, y] - gres[x, y], 0.0);
					if (gres[x, y] > gresmax) gresmax = gres[x, y];
					if (gres[x, y] < gresmin) gresmin = gres[x, y];
					if (wlv > wlvmax) wlvmax = wlv;
				}
			}
			
			// Convert to bitmap
			Bitmap bm = new Bitmap(width, height);
			for(int y = 0; y < height; y++)
			{
				for(int x = 0; x < width; x++)
				{
					double rgres = (gres[x, y] - gresmin) / (gresmax - gresmin);
					double rwres = (Math.Max(wres[x, y] - gres[x, y], 0.0)) / wlvmax;
					double rg = rgres;
					double b = rgres;
					rg *= (1 - rwres);
					b += (1.0 - b) * rwres;
					bm.SetPixel(x, y, Color.FromArgb((byte)(rg * 255.0), (byte)(rg * 255.0), (byte)(b * 255.0)));
				}
			}
			bm.Save("output.bmp");	            
		}
	}
}

